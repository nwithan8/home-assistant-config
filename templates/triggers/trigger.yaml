# Note when the garage door was last opened
- trigger:
    - platform: state
      entity_id: cover.garage_door
      from: cover.close_cover
      to: cover.open_cover
  sensor:
    - name: Garage Door Last Opened
      state: "{{ now() }}"

# Update hourly weather
- trigger:
    - platform: time_pattern
      minutes: "3"
      seconds: "12"
  action:
    - service: weather.get_forecast
      data:
        type: hourly
      target:
        entity_id: weather.openweathermap
      response_variable: forecast
    - service: script.1696374658541
      data:
        temperature: "{{ forecast.forecast[0].temperature }}"
        humidity: "{{ forecast.forecast[0].humidity }}"
      response_variable: heat_index
  sensor:
    - name: Current hourly weather precipitation probability
      state: "{{ forecast.forecast[0].precipitation_probability }}"
    - name: Current hourly weather hourly forecast
      state: "{{ forecast.forecast[0].condition }}"
    - name: Current hourly weather temperature
      state: "{{ forecast.forecast[0].temperature }}"
    - name: Current hourly weather dew point
      state: "{{ forecast.forecast[0].dew_point }}"
    - name: Current hourly weather wind bearing
      state: "{{ forecast.forecast[0].wind_bearing }}"
    - name: Current hourly weather wind speed
      state: "{{ forecast.forecast[0].wind_speed }}"
    - name: Current hourly weather humidity
      state: "{{ forecast.forecast[0].humidity }}"
    - name: Current hourly weather description
      state: "{{ forecast.forecast[0].detailed_description }}"
    - name: Current hourly heat index
      state: "{{ heat_index.heat_index }}"
    - name: Current hourly target inside temperature
      state: "{{ }}"

# Update daily weather summary
- trigger:
    - platform: time_pattern
      minutes: "3"
      seconds: "12"
  action:
    - service: weather.get_forecast
      data:
        type: twice_daily
      target:
        entity_id: weather.kbjc_daynight
      response_variable: forecast
  sensor:
    - name: Current daily weather description
      state: "{{ forecast.forecast[0].detailed_description }}"

# Update inside temperature target (after heat index calculated)
- trigger:
    - platform: time_pattern
      minutes: "4"
      seconds: "12"
  action:
    - service: script.calculate_target_inside_temperature
      data:
        temperature: "{{ states('sensor.current_heat_index') }}"
      response_variable: target_temp
  sensor:
    - name: Current hourly target inside temperature
      state: "{{ target_temp.target_temp }}"
