blueprint:
  name: Gate left open notification
  domain: automation
  author: etiennec78
  description: "# Gate left open notification \U0001F513\n\n## Description \U0001F4DD\nA
    blueprint that **notifies** selected users when the gate has been **left open**
    for a time set\n\n## Key Features \U0001F31F\n* Companion app notification \U0001F514\n*
    Dashboard persistent notification \U0001F4E2\n* Companion app TTS support \U0001F4F3\n*
    Speakers TTS support \U0001F50A\n* Adjustable notifications \U0001F4AC\n\n## More
    info ℹ️\n* Version : 1.0.7\n* Set up sensors : [click here](https://github.com/etiennec78/Home-Automation/blob/master/Automatic%20Gate/sensors.md)\n*
    Github : [click here](https://github.com/etiennec78/Home-Automation/tree/master/Automatic%20Gate/Extra/Automations)\n*
    Discord : etiennec78\n[![\"Buy Me A Coffee\"](https://www.buymeacoffee.com/assets/img/custom_images/yellow_img.png)](https://www.buymeacoffee.com/etiennec78)"
  input:
    gate:
      name: ⛩️ Gate
      description: The **switch** or **cover** which controls your **gate**
      selector:
        entity:
          filter:
          - domain:
            - switch
            - cover
          multiple: false
    left_open_delay:
      name: ⌛ Left open delay
      description: 'The time the automation will wait before notifying your devices
        if your gate is still open

        Useful to let the gate be open for a normal amount of time'
      default: 7
      selector:
        number:
          min: 0.0
          max: 30.0
          unit_of_measurement: minutes
          step: 1.0
          mode: slider
    notify_devices:
      name: "\U0001F4AC Notify services"
      description: 'Each **service** of **device to notify** (Find the service ids
        by going into [Developer tools > Services tab](https://my.home-assistant.io/redirect/developer_states)
        > searching for "notify.")

        *Note : Optional*'
      default: []
      selector:
        text:
          multiple: true
          prefix: notify.mobile_app_
          multiline: false
    persistent_notification:
      name: "\U0001F514 Persistent notification"
      description: Be notified by a **[persistent notification](https://www.home-assistant.io/integrations/persistent_notification)**
        directly on the **frontend**
      default: false
      selector:
        boolean: {}
    phone_tts:
      name: "\U0001F4F3 Phone TTS"
      description: Let your **phones** read the **notification on speaker** when received
      default: false
      selector:
        boolean: {}
    speaker_tts_devices:
      name: "\U0001F50A TTS speakers"
      description: 'The **home speakers** your want to play a TTS on

        *Note : Optional*'
      default: []
      selector:
        entity:
          multiple: true
          domain:
          - media_player
    speaker_tts_service:
      name: "\U0001F399️ TTS service"
      description: 'The **TTS service** you want to use for your speakers

        *Note : Optional*'
      default: []
      selector:
        target:
          entity:
          - domain:
            - tts
    left_open_title:
      name: "\U0001F4C3 Gate left open notification title"
      description: The **title** displayed on the notification you will receive when
        your gate has been **left open**
      default: "Gate left open \U0001F513"
      selector:
        text: {}
    left_open_message:
      name: "\U0001F4AC Gate left open notification"
      description: 'The **content** of the notification you will receive when your
        gate has been **left open**

        *Note : {{left_open_delay}} will be replaced by the left open delay set above*'
      default: Gate has been left open for {{ left_open_delay }} minutes
      selector:
        text: {}
  source_url: https://github.com/etiennec78/Home-Automation/blob/master/Automatic
    Gate/Extra/Automations/gate-left-open-notification.yaml
variables:
  gate: !input gate
  left_open_delay: !input left_open_delay
  persistent_notification: !input persistent_notification
  speaker_tts_devices: !input speaker_tts_devices
  speaker_tts_service: !input speaker_tts_service
trigger:
- platform: template
  value_template: '{{ is_state(switch.gate, [''on'', ''open'']) }}'
  for:
    minutes: !input left_open_delay
condition: []
action:
- repeat:
    for_each: !input notify_devices
    sequence:
    - service: '{{ ''notify.mobile_app_''+repeat.item }}'
      data:
        message: !input left_open_message
        title: !input left_open_title
        data:
          car_ui: true
          notification_icon: mdi:gate-alert
          channel: Gate alerts
          importance: high
          tag: gate-left-open
          timeout: 3600
    - if:
        condition: template
        value_template: !input phone_tts
      then:
      - service: '{{ ''notify.mobile_app_''+repeat.item }}'
        data:
          message: TTS
          data:
            tts_text: !input left_open_message
- repeat:
    for_each: '{{ speaker_tts_devices }}'
    sequence:
    - service: tts.speak
      data:
        cache: true
        media_player_entity_id: '{{ repeat.item }}'
        message: !input left_open_message
      target: '{{ speaker_tts_service }}'
- if:
    condition: template
    value_template: !input persistent_notification
  then:
  - service: persistent_notification.create
    data:
      message: !input left_open_message
      title: !input left_open_title
      notification_id: gate-left-open
- wait_for_trigger:
  - platform: template
    value_template: '{{ is_state(gate, [''off'', ''closed'', ''closing'']) }}'
  timeout:
    hours: 1
    minutes: 0
    seconds: 0
    milliseconds: 0
  continue_on_timeout: false
- repeat:
    for_each: !input notify_devices
    sequence:
    - service: '{{ ''notify.mobile_app_''+repeat.item }}'
      data:
        message: clear_notification
        data:
          tag: gate-left-open
- if:
    condition: template
    value_template: !input persistent_notification
  then:
  - service: persistent_notification.dismiss
    data:
      notification_id: gate-left-open
mode: single
